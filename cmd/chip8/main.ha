use sdl3::*;
use types::c;
const font: [_]u8 = [
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
];

export fn main() void = {
	let mem = alloc(4096);
	draw();
};

fn draw() void = {
	SDL_Init(SDL_INIT_VIDEO);
	defer SDL_Quit();

	const win = SDL_CreateWindow(
		c::nulstr("hare-sdl3 demo\0"),
		640, 480, 0);
	assert(win != null);
	defer SDL_DestroyWindow(win);

	const render = SDL_CreateRenderer(win, null);
	assert(render != null);

	let rect = SDL_FRect {
		x = 0.0,
		y = 0.0,
		w = 50.0,
		h = 50.0,	
	};

	let run = true;
	let ev = SDL_Event { ... };
	for (run) {
		for (SDL_PollEvent(&ev)) {
			if (ev.__type == SDL_EVENT_QUIT) {
				run = false;
			};
		};

		SDL_RenderClear(render);
		SDL_SetRenderDrawColor(render, 255, 255, 118, 255);
		SDL_RenderFillRect(render, &rect);
		SDL_SetRenderDrawColor(render, 29, 31, 33, 0);
		SDL_RenderPresent(render);
	};
};
